#!/usr/bin/env python
import rospy
import sys
import os
import numpy as np
import cv2

import scipy.stats.mstats as stat

import matplotlib.pyplot as plt
from bumblebee.calibration import *
import argparse
from bumblebee.stereo import *
from bumblebee.drawing import *



rospy.init_node("bumblebee_projection_simulation")
bumblebee=stereoCamera()
for a in range(0,2):

    limage=255*np.ones((bumblebee.kSettings["height"],
                        bumblebee.kSettings["width"])
                        ,dtype=np.uint8)
    rimage=255*np.ones((bumblebee.kSettings["height"],
                        bumblebee.kSettings["width"])
                        ,dtype=np.uint8)

    testData=bumblebee.simulateFrame(getSimulatedLandmarkSettings(),300)

    for j in testData.landmarks:
        lPr,rPr=bumblebee.predictPoint(j["Ideal"]["X"])
        Pred=np.vstack((lPr,rPr))
        orig=np.vstack((j["Ideal"]["L"],j["Ideal"]["R"]))
        pnt=rmsError(Pred,orig)
        print(pnt)
    im=testData.drawEpiMatches(bumblebee.kSettings["width"],
                                bumblebee.kSettings["height"],
                                bumblebee.kSettings["roi"])
    cv2.imshow("a",im)
    cv2.waitKey(0)
